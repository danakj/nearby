# Copyright 2023 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

licenses(["notice"])

cc_library(
    name = "base",
    srcs = [
    ],
    hdrs = [
        "observer_list.h",
    ],
    copts = [
        "-Ithird_party",
    ],
    visibility = [
        "//fastpair:__subpackages__",
        "//internal/account:__subpackages__",
        "//internal/interop:__pkg__",
        "//internal/platform:__pkg__",
        "//internal/test:__pkg__",
        "//location/nearby/cpp/experiments:__subpackages__",
        "//location/nearby/cpp/sharing:__subpackages__",
        "//sharing:__subpackages__",
    ],
    deps = [
        "//internal/platform:types",
        "@com_google_absl//absl/base:core_headers",
        "@com_google_absl//absl/container:flat_hash_set",
    ],
)

cc_library(
    name = "base_chromium",
    srcs = [
    ],
    hdrs = [
        "check.h",
        "check_op.h",
        "compiler_specific.h",
        "containers/checked_iterators.h",
        "containers/dynamic_extent.h",
        "containers/span.h",
        "containers/util.h",
        "memory/raw_ptr_exclusion.h",
        "types/to_address.h",
        "numerics/angle_conversions.h",
        "numerics/basic_ops_impl.h",
        "numerics/byte_conversions.h",
        "numerics/checked_math.h",
        "numerics/checked_math_impl.h",
        "numerics/clamped_math.h",
        "numerics/clamped_math_impl.h",
        "numerics/math_constants.h",
        "numerics/ostream_operators.h",
        "numerics/ranges.h",
        "numerics/safe_conversions_arm_impl.h",
        "numerics/safe_conversions.h",
        "numerics/safe_conversions_impl.h",
        "numerics/safe_math_arm_impl.h",
        "numerics/safe_math_clang_gcc_impl.h",
        "numerics/safe_math.h",
        "numerics/safe_math_shared_impl.h",
        "numerics/wrapping_math.h",
    ],
    copts = [
        "-Ithird_party",
    ],
    visibility = [
        "//internal/crypto_cros:__pkg__",
        "//internal/crypto_chromium:__pkg__",
    ],
    deps = [
        "//internal/build:build_chromium",
        "@com_google_absl//absl/base",
        "@com_google_absl//absl/log:check",
    ],
)

cc_library(
    name = "bluetooth_address",
    srcs = [
        "bluetooth_address.cc",
    ],
    hdrs = [
        "bluetooth_address.h",
    ],
    copts = [
        "-Ithird_party",
    ],
    visibility = [
        "//fastpair:__subpackages__",
        "//internal:__subpackages__",
        "//location/nearby/cpp/sharing:__subpackages__",
        "//sharing:__subpackages__",
    ],
    deps = [
        "@com_google_absl//absl/strings",
        "@com_google_absl//absl/strings:str_format",
        "@com_google_absl//absl/types:optional",
        "@com_google_absl//absl/types:span",
    ],
)

cc_library(
    name = "files",
    srcs = ["files.cc"],
    hdrs = ["files.h"],
    visibility = ["//visibility:public"],
)

cc_test(
    name = "base_test",
    size = "small",
    timeout = "short",
    srcs = [
        "bluetooth_address_test.cc",
    ],
    copts = [
        "-Ithird_party",
    ],
    shard_count = 8,
    deps = [
        ":bluetooth_address",
        "@com_github_protobuf_matchers//protobuf-matchers",
        "@com_google_absl//absl/time",
        "@com_google_absl//absl/types:span",
        "@com_google_googletest//:gtest_main",
    ],
)
